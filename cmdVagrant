# pour avoir autosuggestions "c'est optionnel"
# il faut ajouter zsh-autosuggestions au plagins
# dans le fichier .zshrc comme suite
# 'plugins=(git
#             zsh-autosuggestions
#             )'

#########################################
# si l'espace sur le goinfre depace 28G #
#########################################

echo "export VBOX_USER_HOME=\"/goinfre/$(whoami)/Inception-of-Things/.configVB\"" >> ~/.zshrc
echo "export VAGRANT_HOME=\"/goinfre/$(whoami)/Inception-of-Things/.vagrant.d\"" >> ~/.zshrc
echo "export VBOX_MSI_INSTALL_PATH=\"/goinfre/$(whoami)/Inception-of-Things/VirtualBoxVMs\"" >> ~/.zshrc
echo "export VBOX_MSI_INSTALL_PATH=\"/goinfre/$(whoami)/Inception-of-Things/VirtualBoxVMs\"" >> ~/.bashrc

####################################################################################
# pour changer le dossier par default de l'enregisrement de la VM dans Virtual Box #
####################################################################################

VBoxManage setproperty machinefolder /goinfre/$(whoami)/Inception-of-Things/VirtualBoxVMs

###########################################
# sinon il faut travailler sur l'sgoinfre #
###########################################

echo "export VBOX_USER_HOME=\"/sgoinfre/goinfre/Perso/$(whoami)/sgoinfre/Inception-of-Things/.configVB\"" >> ~/.zshrc
echo "export VAGRANT_HOME=\"/sgoinfre/goinfre/Perso/$(whoami)/sgoinfre/Inception-of-Things/.vagrant.d\"" >> ~/.zshrc
echo "export VBOX_MSI_INSTALL_PATH=\"/sgoinfre/goinfre/Perso/$(whoami)/sgoinfre/Inception-of-Things/VirtualBoxVMs\"" >> ~/.zshrc
echo "export VBOX_MSI_INSTALL_PATH=\"/sgoinfre/goinfre/Perso/$(whoami)/sgoinfre/Inception-of-Things/VirtualBoxVMs\"" >> ~/.bashrc

####################################################################################
# pour changer le dossier par default de l'enregisrement de la VM dans Virtual Box #
####################################################################################

VBoxManage setproperty machinefolder /mnt/nfs/homes/$(whoami)/sgoinfre/Inception-of-Things/VirtualBoxVMs

###########################################

source ~/.zshrc

##############################
# les  principales commandes #
##############################

# vagrant up
# vagrant reload 
# vagrant ssh 

# scp -r ../../vagrant/bonus ../../vagrant/p* . && cd p1 && vagrant up

# vagrant halt
# vagrant up
# vagrant provision

# vagrant ssh bhamdiS
# vagrant ssh bhamdiSW

# en cas de probleme dans la machine vagrant@Inseption-Of-Things pour eviter de retapper les commandes une par une

# vagrant halt -f && vagrant destroy -f && rm -rf .configVB .vagrant VirtualBoxVMs .vagrant.d ~/VirtualBox\ VMs 


###################################################################
# avant de commencer assurer vous d'avoir votre VirtualBox ouvert #
###################################################################

#####################
# pour tester le p1 #
#####################

en cas ou il y a une message d'erreur de virtualbox
vagrant box remove generic/ubuntu2004

cd p1
chmod +x scripts.sh
vagrant up
 
vagrant global-status

vagrant ssh bhamdiS

k get nodes -o wide

dans un autre terminale et au memme dossier
vagrant ssh bhamdiSW

k describe node bhamdiS
k describe node bhamdiSW

ifconfig eth1

vagrant halt -f && vagrant destroy -f && rm -rf ../.configVB .vagrant ../VirtualBoxVMs ../.vagrant.d ~/VirtualBox\ VMs ./scripts/



#####################
# pour tester le p2 #
#####################

cd p2
chmod +x ./scripts/*
vagrant up

vagrant global-status

vagrant ssh bhamdiS

ifconfig eth1

k get nodes -o wide

k get all -n kube-system
k get all
k get svc
curl -H "Host:app2.com" 192.168.56.110
k get ingress
k -n kube-system get pods

k get deployments
k get nodes
k get services

dans le navigateur
il faut activer ce plugin sur google chrome
https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif
et ajouter ces deux regles:
    OmegaOptions/OmegaProfile_auto_switch.pac et 
    OmegaOptions/OmegaProfile_Inception_of_Things.pac ou 
    tout les parametre d'un coup avec OmegaOptions/OmegaOptions.bak
puis activer le profile Inception-of-Things

et acceder a ces liens
http://192.168.56.110/
http://app1.com
http://app2.com
http://app3.com


vagrant halt -f && vagrant destroy -f && rm -rf ../.configVB .vagrant ../VirtualBoxVMs ../.vagrant.d ~/VirtualBox\ VMs


#####################
# pour tester le p3 #
#####################

La différence majeure entre K3S et K3D
est que K3S déploie un cluster Kubernetes basé sur une machine virtuelle,
tandis que K3D déploie des clusters Kubernetes K3S basés sur Docker,
ce qui peut offrir une version plus évolutive de K3S
et le rendre préférable au K3S standard

cd p3
chmod +x ./scripts/*
vagrant up

vagrant ssh

kubectl get namespaces

k get pods -n argocd
k get pods -n dev

kubectl port-forward svc/argocd-server -n argocd 8080:443



# k logs -n kube-system $(kubectl get pods -n kube-system -l k8s-app=metrics-server -o jsonpath='{.items[0].metadata.name}')

vagrant halt -f && vagrant destroy -f && rm -rf ../.configVB .vagrant ../VirtualBoxVMs ../.vagrant.d ~/VirtualBox\ VMs



########################
# pour tester le Bonus #
########################

